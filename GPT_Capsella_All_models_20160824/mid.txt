
% In this section you may modify the mesh in any way that does not
% alter the set of nodes.

if (Steps(m)==42) && m.globalDynamicProps.doinit  % Initialisation code.
    m = leaf_makesecondlayer( m, 'mode', 'few', 'numcells', 150, 'relarea', 0.001, ...     %relarea for 0-4 DAI 0.005 and 0.002 for 2.5DAI-8.5DAI
        'allowoveredge', false, 'allowoverlap', false );
    % Must set 'allowoveredge' to false, to avoid non-circular
    % cells at the edge of the mesh.
    % Need to re-establish the variables c_growth_i and c_growth,
    % because we've just changed the second layer.  c_growth is used to
    % store the growth on the major axis.
    [c_growth_i,c_growth] = getCellFactorLevels( m, 'c_growth' );
    
    % Store initial shape data.
    m.userdata.initialcellshapes = cellshapes( m );
    
    % Plot the c_growth cellular factor with rainbow colour-coding.  Use
    % 'posneg' instead of 'rainbow' if you want a colour scale that goes from
    % white to red.
    m = leaf_setcellcolorinfo( m, 'factor', 'c_growth', 'mode', 'rainbow' );
end

% if Steps(m) > 42
%     k = cellshapes( m );
%     cellgrowth = k(:,[1 2]) ./ m.userdata.initialcellshapes(:,[1 2]);
%     
%     % Set the c_growth cellular factor from the growth rate along the
%     % major axis.
%     c_growth(:) = cellgrowth(:,1);
% end
% 
% if Steps(m) > 42
%     k = cellshapes( m );
%     cellgrowth = k(:,[1 2]) ./ m.userdata.initialcellshapes(:,[1 2])
%     % The values are printed on the Matlab console.
%     %         c = perVertexToPerCell( m, id_valve_p );
%     %        k( c > 0, : )
%     %        cellgrowth( c > 0, : )
% end

if Steps(m) > 42
    k = cellshapes( m );
    cellgrowth = k(:,[1 2]) ./ m.userdata.initialcellshapes(:,[1 2]);
    c_growth(:) = cellgrowth(:,1);
end


if (Steps(m)==0) && m.globalDynamicProps.doinit  % Initialisation code.
    %% PRN Polariser Regulatory Network
    
    proxorg_ind= m.nodes(:,3)<-19.5;
    id_proxorg_p(proxorg_ind) = 1;
    P(proxorg_ind) = 1;
    m = leaf_fix_mgen( m, polariser_i,'vertex',find(proxorg_ind),'fix', 1);
    
    m = leaf_mgen_conductivity(m, polariser_i, 5);
    m = leaf_mgen_absorption(m, polariser_i, 0.001);
    
    id_distorg_p(m.nodes(:,3)>17.5) = 1;
    
    basenodes_ind= min(m.nodes(:,3));
    id_basenodes_p(m.nodes(:,3)==basenodes_ind) =1;
    
    % m.fixedDFmap( id_basenodes_p==1, 3 ) = true;
    m = leaf_fix_vertex( m, 'vertex', id_basenodes_p==1, 'dfs', 'z' );
    
    %% Growth factors
    
    % STYLE
    id_style_p(m.nodes(:,3)>14) = 1;
    
    m.mgen_production(:, s_style_i) = id_style_p;                                                               % whereever id_style is s_rep is produced
    m = leaf_mgen_conductivity(m, s_style_i, 0.25);                                                              % how much s_style is conducted
    m = leaf_mgen_absorption(m, s_style_i, 0);                                                                  % how much s_style is degraded at each node
    m = leaf_mgen_dilution(m, s_style_i, 0);
    
    m.morphogenclamp( id_style_p==1, s_style_i ) = 1;                                                           % Clamping the highest value of s_style to 1.
    s_style_p = 1 * id_style_p;
    
    % BASE
    id_base_p(m.nodes(:,3)<-16) = 1;
    
    m.mgen_production(:, s_base_i) = id_base_p;                                                                 % whereever id_rep is s_rep is produced
    m = leaf_mgen_conductivity(m, s_base_i, 0.25);                                                               % how much s_rep is conducted
    m = leaf_mgen_absorption(m, s_base_i, 0);                                                                   % how much s_rep is degraded at each node
    m = leaf_mgen_dilution(m, s_base_i, 0);
    
    m.morphogenclamp( id_base_p==1, s_base_i ) = 1;                                                             % Clamping the highest value of s_base to 1.
    s_base_p = 1 * id_base_p;
    
    % REP
    id_rep_p((abs(m.nodes(:,1))<10)&(m.nodes(:,3)<14)) = 1;
    
    % SHOULDERS -top half of the model
    id_shoulders_p(m.nodes(:,3)>0) = 1;
    
    % MIDVALVE
    id_midvalve_p((abs(m.nodes(:,2))<7.5)&(m.nodes(:,3)<14)) = 1;
    
    % VALVE
    id_valve_p= 1- (id_midvalve_p+id_rep_p+id_style_p);
    
    %APEX
    id_apex_p((abs(m.nodes(:,2))<7.5)&(m.nodes(:,3)<8)&(m.nodes(:,3)>2)) = 1;
    
    % INHIBITMV- linear gradient highest at the base
    % (fixed to 1) and lowest in the shoulders (fixed to 0)
    m.mgen_production(:, s_inhibitmv_i) = id_base_p;
    m = leaf_mgen_conductivity(m, s_inhibitmv_i,15);                                                            % factor used to set up gdist
    m = leaf_mgen_absorption(m, s_inhibitmv_i, 0);
    m = leaf_mgen_dilution(m, s_inhibitmv_i, 0);
    
    m.morphogenclamp(((id_base_p==1)|(id_shoulders_p>0)), s_inhibitmv_i ) = 1;                                  % Clamping the highest value of s_inhibitmv to 1 and in the shoulders to 0 to make a linear gradient.
    s_inhibitmv_p = 1 * id_base_p;
    
    
    % GPROX- linear gradient in the valves fixed as 1 at the base and 0 in the shoulders
    m.mgen_production(:, s_gprox_i) = id_base_p;
    m = leaf_mgen_conductivity(m, s_gprox_i,15);                                                                % to create gradient in the distal end of valves
    m = leaf_mgen_absorption(m, s_gprox_i, 0);
    m = leaf_mgen_dilution(m, s_gprox_i, 0);
    
    m.morphogenclamp(((id_base_p==1)|(id_shoulders_p>0)|(id_midvalve_p>0)), s_gprox_i ) = 1;                    % Clamping the highest value of s_gprox to 1 and in the shoulders to 0 to make a linear gradient.
    s_gprox_p = 1 * id_base_p;
    
    
    % GDIST- Linear gradient fixed as 1 in the distal region(below
    % the style) and fixed to 0 at the base.
    
    id_gdist_p((m.nodes(:,3)>5)&(m.nodes(:,3)<14)&(abs(m.nodes(:,2))>7.5)&(m.nodes(:,3)<14)) = 1;               % id_gdist in upper half of valve, not in midvalve- because in KRN would promote extra growth in midvalve on top of gmidvalve
    
    m.mgen_production(:, s_gdist_i) = id_gdist_p;
    m = leaf_mgen_conductivity(m, s_gdist_i,5);                                                                 % factor used to inhibit kpar at top
    m = leaf_mgen_absorption(m, s_gdist_i, 0);
    m = leaf_mgen_dilution(m, s_gdist_i, 0);
    
    m.morphogenclamp(((id_gdist_p==1)|(id_base_p>0)|(id_style_p>0)), s_gdist_i ) = 1;
    s_gdist_p = 1 * id_gdist_p;
    
    %                 m.morphogenclamp(((id_gdist_p==1)|(id_base_p>0)|(id_midvalve_p>0)|(id_style_p>0)), s_gdist_i ) = 1;         % Clamping the highest value of s_gdist to 1 and at Base 0 to make a linear gradient
    %                 s_gdist_p = 1 * id_gdist_p;
    
end

if Steps(m)==3
    
    % STYLE
    
    m.mgen_production(:, s_style_i) = id_style_p;
    m = leaf_mgen_conductivity(m, s_style_i, 0);                                                                % stop conductivity, fixing valves of s_style
    m = leaf_mgen_absorption(m, s_style_i, 0);
    m = leaf_mgen_dilution(m, s_style_i, 0);
    
    % BASE
    
    m.mgen_production(:, s_base_i) = id_base_p;
    m = leaf_mgen_conductivity(m, s_base_i, 0);                                                                 % stop conductivity, clamping values of s_base
    m = leaf_mgen_absorption(m, s_base_i, 0);
    m = leaf_mgen_dilution(m, s_base_i, 0);
    
end

if Steps(m)==6
    
    % GPROX - fix the gradient
    m.mgen_production(:, s_gprox_i) = id_base_p;
    m = leaf_mgen_conductivity(m, s_gprox_i, 0);
    m = leaf_mgen_absorption(m, s_gprox_i, 0);
    m = leaf_mgen_dilution(m, s_gprox_i, 0);
    
    
    % GDIST- fix the gradient
    
    m.mgen_production(:, s_gdist_i) = id_gdist_p;
    m = leaf_mgen_conductivity(m, s_gdist_i,0);
    m = leaf_mgen_absorption(m, s_gdist_i, 0);
    m = leaf_mgen_dilution(m, s_gdist_i, 0);
    
    % INHIBITMV - fix the gradient
    m.mgen_production(:, s_inhibitmv_i) = id_base_p;
    m = leaf_mgen_conductivity(m, s_inhibitmv_i,0);
    m = leaf_mgen_absorption(m, s_inhibitmv_i, 0);
    m = leaf_mgen_dilution(m, s_inhibitmv_i, 0);
    
    % GMIDVALVE - linear gradient in the midvalve opposite to
    % s_inhibitmv_p
    
    id_gmidvalve_p= (1 - s_inhibitmv_p - s_style_p) .*id_midvalve_p ;                                               % gradient in the midvalve, 0 in style, highest in distal end of midvalve
    
    
    
end

if realtime>=0
    
    % EPHASE- early phase from 0-2DAI wjere growth in length is high
    
    id_ephase_p(abs(m.nodes(:,3))>0) = 1;
    
end

if realtime >=48
    
    % EPHASE
    
    id_ephase_p(abs(m.nodes(:,3))>0) = 0;
    
    % MPHASE- middle phase to generate the snuff bottle phase where
    % growth in width increases
    
    id_mphase_p(abs(m.nodes(:,3))>0) = 1;
    
    
    
end


if realtime >=208
    
    % MPHASE
    
    id_mphase_p(abs(m.nodes(:,3))>0) = 0;
    
    % LPHASE- late phase where a heart-shpae form is generated from the
    % snuff bottle and alternative gradients affect Kper and Kpar
    
    id_lphase_p(abs(m.nodes(:,3))>0) = 1;
    
    
    
end

if realtime >=0
    %% KRN
    
    %                     kapar_p(:) = 0.014.*pro(1,id_ephase_p)...
    %                                       .*pro(0.2,id_midvalve_p.*id_mphase_p)...
    %                                       .*inh(5,id_base_p.*id_mphase_p)...
    %                                       .*pro(0.4,id_gmidvalve_p.*id_lphase_p .* inh(100,id_apex_p))...                   % .*pro(0.3,id_gmidvalve_p.*id_lphase_p)...                                             %.*inh(1,id_gmidvalve_p)...
    %                                       .*inh(100,id_base_p.*id_lphase_p)...
    %                                       .*inh(6,s_gdist_p.*id_lphase_p .* inh(100,id_midvalve_p .* inh(100,id_apex_p)))...        %.*inh(6,s_gdist_p.*id_lphase_p)...
    %                                       .*pro(2,s_gprox_p.*id_lphase_p)...
    %                                       .*inh(1,s_style_p.*id_lphase_p);                                                      %.*inh(1.2,id_mphase_p)....*inh(1,id_lphase_p)...
    %
    %
    %
    %
    %
    %                     kbpar_p(:) = kapar_p;
    %
    %                     kaper_p(:) = 0.011.*inh(1,s_base_p.*id_mphase_p)...
    %                                       .*inh(3,s_style_p.*id_mphase_p)...
    %                                       .*inh(5,id_rep_p.*id_mphase_p)...
    %                                       .*inh(1,id_midvalve_p.*id_mphase_p)...
    %                                       .*inh(2,s_gprox_p.*id_lphase_p)....
    %                                       .*inh(1,s_base_p.*id_lphase_p)...
    %                                       .*inh(2,s_style_p.*id_lphase_p)...
    %                                       .*inh(5,id_rep_p.*id_lphase_p)...
    %                                       .*inh(1,id_midvalve_p.*id_lphase_p);
    % %                                       .*pro(0.2,s_gdist_p.*id_lphase_p.* inh(100,id_apex_p));
    
    switch modelname
        case 'MODEL1-E_PHASE_AND_EARLY_M_PHASE'
            kapar_p(:) = 0.012 .* pro(2,id_ephase_p)...
                .*inh(5,id_base_p.*id_mphase_p);
            
            kbpar_p(:) = kapar_p;
            
            kaper_p(:) = 0.012.* inh(5,s_style_p.*id_mphase_p)...
                .*inh(1,s_base_p.*id_mphase_p);
            
            kbper_p(:) = kaper_p;
            
            knor_p(:) = 0.01;
            
        case 'MODEL2-E_PHASE_AND_M_PHASE'
            kapar_p(:) = 0.012 .* pro(2,id_ephase_p)...
                .*inh(5,id_base_p.*id_mphase_p)...
                .*pro(0.2,id_midvalve_p.*id_mphase_p);
            
            kbpar_p(:) = kapar_p;
            
            kaper_p(:) = 0.012.* inh(5,s_style_p.*id_mphase_p)...
                .*inh(1,s_base_p.*id_mphase_p)...
                .*inh(5,id_rep_p.*id_mphase_p)...
                .*inh(1,id_midvalve_p.*id_mphase_p);
            
            kbper_p(:) = kaper_p;
            
            knor_p(:) = 0.01;
            
        case 'MODEL3-E_PHASE_AND_M_PHASE_AND_L_PHASE'
            kapar_p(:) = 0.012.*pro(2,id_ephase_p)...
                .*inh(5,id_base_p.*id_mphase_p)...
                .*pro(0.2,id_midvalve_p.*id_mphase_p)...
                .*inh(100,id_base_p.*id_lphase_p)...
                .*inh(0.5,s_style_p.*id_lphase_p)...
                .*pro(0.4,id_gmidvalve_p.*id_lphase_p .* inh(100,id_apex_p))...                 
                .*inh(4,s_gdist_p.*id_lphase_p .* inh(100,id_midvalve_p .* inh(100,id_apex_p)))...
                .*pro(2,s_gprox_p.*id_lphase_p);
            
            kbpar_p(:) = kapar_p;
            
            kaper_p(:) = 0.012.*inh(1,s_base_p.*id_mphase_p)...
                .*inh(5,s_style_p.*id_mphase_p)...
                .*inh(5,id_rep_p.*id_mphase_p)...
                .*inh(1,id_midvalve_p.*id_mphase_p)...
                .*inh(2,s_gprox_p.*id_lphase_p)....
                .*inh(1,s_base_p.*id_lphase_p)...
                .*inh(2,s_style_p.*id_lphase_p)...
                .*inh(5,id_rep_p.*id_lphase_p)...
                .*inh(1,id_midvalve_p.*id_lphase_p);                                         
            
            kbper_p(:) = kaper_p;
            
            knor_p(:) = 0.01;
            
        case 'MODEL5-NESLIA'
            kapar_p(:) = 0.012.*pro(2,id_ephase_p)...
               .*inh(5,id_base_p.*id_mphase_p)...
               .*inh(100,id_base_p.*id_lphase_p);
            
            kbpar_p(:) = kapar_p;
            
            kaper_p(:) = 0.012.*inh(1,s_base_p.*id_mphase_p)...
                .*inh(5,s_style_p.*id_mphase_p)...
                .*inh(5,id_rep_p.*id_mphase_p)...
                .*inh(1,s_base_p.*id_lphase_p)...
                .*inh(2,s_style_p.*id_lphase_p)...
                .*inh(5,id_rep_p.*id_lphase_p);
            
            kbper_p(:) = kaper_p;
            
            knor_p(:) = 0.01;
            
        case 'MODEL6-LEPIDIUM'
            kapar_p(:) = 0.012.*pro(2,id_ephase_p)...
                .*inh(5,id_base_p.*id_mphase_p)...
                .*pro(0.2,id_midvalve_p.*id_mphase_p)...
                .*inh(100,id_base_p.*id_lphase_p)...
                .*inh(0.5,s_style_p.*id_lphase_p)...
                .*pro(0.4,id_gmidvalve_p.*id_lphase_p);                                                                       
            
            kbpar_p(:) = kapar_p;
            
            kaper_p(:) = 0.012.*inh(1,s_base_p.*id_mphase_p)...
                .*inh(5,s_style_p.*id_mphase_p)...
                .*inh(5,id_rep_p.*id_mphase_p)...
                .*inh(1,id_midvalve_p.*id_mphase_p)...
                .*inh(1,s_base_p.*id_lphase_p)...
                .*inh(2,s_style_p.*id_lphase_p)...
                .*inh(5,id_rep_p.*id_lphase_p)...
                .*inh(1,id_midvalve_p.*id_lphase_p);  
            
            kbper_p(:) = kaper_p;
            
            knor_p(:) = 0.01;            
            
        case 'MODEL7-ALYSSUM'
%             kapar_p(:) = 0.012.*pro(2,id_ephase_p)...
%                 .*inh(5,id_base_p.*id_mphase_p)...            
%                 .*pro(0.3,id_rep_p.*id_mphase_p)... %added this       %was 0.15     
%                 .*inh(100,id_base_p.*id_lphase_p)...
%                 .*inh(0.5,s_style_p.*id_lphase_p)...
%                 .*pro(0.3,id_rep_p.*id_lphase_p);                                                                       
%             
%             kbpar_p(:) = kapar_p;
%             
%             kaper_p(:) = 0.012.*inh(1,s_base_p.*id_mphase_p)...
%                 .*inh(5,s_style_p.*id_mphase_p)...
%                 .*inh(5,id_rep_p.*id_mphase_p)...
%                 .*inh(1,id_midvalve_p.*id_mphase_p)...
%                 .*inh(1,s_base_p.*id_lphase_p)...
%                 .*inh(2,s_style_p.*id_lphase_p)...
%                 .*inh(5,id_rep_p.*id_lphase_p)...
%                 .*inh(1,id_midvalve_p.*id_lphase_p);  
%             
%             kbper_p(:) = kaper_p;
%             
%             knor_p(:) = 0.01;

  kapar_p(:) = 0.014.*pro(1,id_ephase_p)...                   % promote growth in length in the early phase
                                      .*pro(0.2,id_rep_p.*id_mphase_p)...       % Promote kpar in the replum to flatten the model medially
                                      .*inh(5,id_base_p.*id_mphase_p)...       
                                      .*pro(0.15,id_rep_p.*id_lphase_p)...      % Promote kpar in the replum to flatten the model medially
                                      .*inh(1,s_style_p.*id_lphase_p);          % inhibit kpar in the style during the late phase
            
                                                 
                                                  
                                                           
                                        
                    kbpar_p(:) = kapar_p;
                    
                    kaper_p(:) = 0.0125.*inh(1,s_base_p.*id_mphase_p)...        % inhibit base to generate the narrow base
                                      .*inh(3,id_style_p.*id_mphase_p)...       % inhibit in the style to generate the narrow style
                                      .*inh(2,id_rep_p.*id_mphase_p)...         % inhibit in the rep to stop the region getting wider as kpar is high in this region
                                      .*inh(1,s_base_p.*id_lphase_p)...         % inhibit base by s_base in the late phase to stop the proximal regions bulging out
                                      .*inh(2,s_style_p.*id_lphase_p)...        % inhibit base by s_style in the late phase to stop the distal regions bulging out
                                      .*inh(2,id_rep_p.*id_lphase_p)...
                                      .*inh(1,id_midvalve_p.*id_mphase_p)...
                                      .*inh(1,id_midvalve_p.*id_lphase_p);
                                
                    
                    kbper_p(:) = kaper_p;
                    
                    knor_p(:) = 0.01; 
            
        case 'MODEL8-MUTANT'
            kapar_p(:) = 0.012.*pro(2,id_ephase_p)...
                .*inh(5,id_base_p.*id_mphase_p)...
                .*pro(0.2,id_midvalve_p.*id_mphase_p)...
                .*pro(0.4,id_gmidvalve_p.*id_lphase_p .* inh(100,id_apex_p))...                                             %.*inh(1,id_gmidvalve_p)...
                .*inh(100,id_base_p.*id_lphase_p)...
                .*inh(0,s_gdist_p.*id_lphase_p .* inh(100,id_midvalve_p .* inh(100,id_apex_p)))...
                .*pro(2,s_gprox_p.*id_lphase_p)...
                .*inh(0.5,s_style_p.*id_lphase_p)...
                .*inh(1,id_lphase_p);
            
            kbpar_p(:) = kapar_p;
            
            kaper_p(:) = 0.012.*inh(1,s_base_p.*id_mphase_p)...
                .*inh(5,s_style_p.*id_mphase_p)...
                .*inh(5,id_rep_p.*id_mphase_p)...
                .*inh(1,id_midvalve_p.*id_mphase_p)...
                .*inh(2,s_gprox_p.*id_lphase_p)....
                .*inh(1,s_base_p.*id_lphase_p)...
                .*inh(2,s_style_p.*id_lphase_p)...
                .*inh(5,id_rep_p.*id_lphase_p)...
                .*inh(1,id_midvalve_p.*id_lphase_p)...
                .*inh(1,id_lphase_p);
            
            kbper_p(:) = kaper_p;
            
            knor_p(:) = 0.01;                        
            
        case{'ORIG'}
            kapar_p(:) = 0.012.*pro(2,id_ephase_p)...
                .*inh(5,id_base_p.*id_mphase_p)...
                .*pro(0.2,id_midvalve_p.*id_mphase_p)...
                .*pro(0.4,id_gmidvalve_p.*id_lphase_p .* inh(100,id_apex_p))...                                             %.*inh(1,id_gmidvalve_p)...
                .*inh(100,id_base_p.*id_lphase_p)...
                .*inh(4,s_gdist_p.*id_lphase_p .* inh(100,id_midvalve_p .* inh(100,id_apex_p)))...
                .*pro(2,s_gprox_p.*id_lphase_p)...
                .*inh(0.5,s_style_p.*id_lphase_p);                                                      %.*inh(1.2,id_mphase_p)....*inh(1,id_lphase_p)...
            
            
            kbpar_p(:) = kapar_p;
            
            kaper_p(:) = 0.012.*inh(1,s_base_p.*id_mphase_p)...
                .*inh(5,s_style_p.*id_mphase_p)...
                .*inh(5,id_rep_p.*id_mphase_p)...
                .*inh(1,id_midvalve_p.*id_mphase_p)...
                .*inh(2,s_gprox_p.*id_lphase_p)....
                .*inh(1,s_base_p.*id_lphase_p)...
                .*inh(2,s_style_p.*id_lphase_p)...
                .*inh(5,id_rep_p.*id_lphase_p)...
                .*inh(1,id_midvalve_p.*id_lphase_p);                                          %.*pro(0.2,s_gdist_p.*id_lphase_p)...
            
            
            
            kbper_p(:) = kaper_p;
            
            knor_p(:) = 0.01;
    end
end